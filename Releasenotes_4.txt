Release 4 comments:
1. Technical Review and Presentation: 17/20
2. Test Plan (25.5/30):
	- The overall outline looks good. Start making interpretations of the results (I see an attempt on coverage and JArchitect results). Note that the test plan (specifically, the results and interpretation should be presented from the SUT's viewpoint, not what the tool or technique does). For example, what does an efferent coupling of 962 mean to the SUT. Start making interpretations from the results. Also, look at connections/correlations, differences and similarities between results from different levels and different techniques.
	- We will go over all these results and each project goal in the context of the SUT, during the pre-final release. 
3. Progress: (20/20)
	- Consistent progress. 
	- Nice job on the coverage results. 
4. On-time release and release notes: (10/10)
_________________________________________________________________________
Release 4

Title: Weka Java Code Testing

Team Members:
Kshitija Joshi     # M08766983
Mohammed Aamer FNU # M08802120
Instructor: Prof. Vignesh Subbian


1. Resolved the error "java heap space" by changing configuration for Weka project built in eclipse. Updated VM arguments of specific package which required more heap space for execution of it's classes to '-Xms512M -Xmx1524M'. Screenshot included in Test Support 'Resolved_java_heap_space_issue.PNG'

2. Ran Emma for whole Weka project successfully analysed code coverage for classifier module. Created Emma coverage report 'Emma Coverage Report.docx' included in Test Support folder which contains detailed analysis and interpretation of the result. Also found out how to generate html report 'EmmaReport.html' of the result generated by Emma in eclipse included same in the folder

3. Included brief analysis and interpretaion of the reports generated by JArchitect static analyser in folder Test Support 'JArchitectAnalysis.docx', We will be adding more analysis in further release

4. Project Proposal: Removed JLint implementation from project proposal since it is an obselete tool. After doing research on results and reports generated by Jlint doesn't contain static analysis results such as no.of lines of code, code coverage. Also updated references accordingly.

5. In the repository'TestPlans.docx' : Combined Master Test Plan and Level Test Plan together and updated versions of the release. Updated test schedule as per the status of each task performed.